
<html>
    <br>
    <div style="text-align:center; font-size: 50px; font-weight: 500;">중 급</div>
    <div style="text-align:center; font-size: 20px;" id="flags_num">지뢰: 35개      깃발: 0개</div>
    <br>
    <div class="div_main">
        <canvas class="canvas_main" id="canvas_main" width=450 height=450 onmouseup="fieldClick(window.event);" oncontextmenu="return false"></canvas>
    </div>
    <br><br>
    <div class="div_main">
        <button class="button" onclick="location.href='/MineSearch'">
            <div>돌아가기</div>
            <i>go</i>
        </button>
    </div>
    <style>
        .div_main{
            margin: auto;
            text-align: center;
        }

        .canvas_main{
            background-color: rgb(226, 255, 231);
        }

        .button{
            width: 10%;
            height: 8%;
            font-size: 20px;
            font-weight: 400;
            letter-spacing: 1px;
            padding: 13px 30px 13px;
            outline: 0;
            border: 1px solid black;
            cursor: pointer;
            position: relative;
            background-color: rgba(0, 0, 0, 0);
        }
        .button i{
            opacity: 0;
            font-size: 13px;
            transition: 0.2s;
            position: absolute;
            right: 10px;
            top: 21px;
            transition: transform 1;
        }
        .button div{
            transition: transform 0.8s;
        }
        .button:hover div{
            transform: translateX(-6px);
        }
        .button::after{
            content: "";
            background-color: rgb(204, 255, 213);
            width: 100%;
            z-index: -1;
            position: absolute;
            height: 100%;
            top: 7px;
            left: 7px;
        }
        .button:hover i{
            opacity: 1;
            transform: translateX(-6px);
        }
    </style>
    <script>
        var canvas_main = document.getElementById("canvas_main");
        var context_main = canvas_main.getContext("2d");
        var field = new Array(225);
        var toggle = new Array(225);
        var mine = new Array(225);
        var flags = new Array(225);
        var check = new Array(225);
        const blocksize = 30;
        var i, j;
        var mine_num;
        context_main.fillStyle="rgb(226, 255, 231)";
        context_main.strokeStyle="rgb(0, 99, 0)";
        context_main.font = "15px arial";
        context_main.textAlign = "center";

        init();

        function init(){
            init_screen();
            for(i=0;i<225;i++){ toggle[i] = 0; flags[i] = 0; mine[i] = 0; check[i]=0; }
            putMine();
            drawField();
        }

        function init_screen(){
            for(i=0;i<15;i++){
                for(j=0;j<15;j++){
                    context_main.beginPath();
                    context_main.strokeRect(i*blocksize,j*blocksize,blocksize,blocksize);
                    context_main.closePath();
                }
            }
        }

        function putMine(){
            for(i=0;i<225;i++){ field[i] = 9; }
            let index_mine = randNum();

            for( i = 0; i < 35; i++){
                let temp_num = index_mine[i];
                mine[temp_num] = 99;
                field[temp_num] = 99;
            }
            //alert(field);
        }

        function randNum(){
            let temp_index = [];
            i = 0;
            while(i < 35){
                let n = Math.floor(Math.random()*225);
                if(!sameNum(n)){
                    temp_index.push(n); i++;
                }
            }
            function sameNum(n){
                return temp_index.find((e)=>(e===n));
            }
            return temp_index;
        }

        function fieldClick(event){  // 
            var rect = canvas_main.getBoundingClientRect();
            let x = event.clientX - rect.left;
            let y = event.clientY - rect.top;
            
            x = parseInt(x/30);
            y = parseInt(y/30);
            //alert(x+" "+y);
            let t = 15*x + y;
            
            if(event.button===2){
                toggle[t]++;
                toggle[t] = toggle[t]%2;

                if(toggle[t]%2===1){
                    field[t] = "※";
                    flags[t] = 99;
                    let f_num = 0;
                    for(i=0;i<225;i++){
                        if(toggle[i]===1){ f_num++; }
                    }
                    document.getElementById("flags_num").innerHTML = "지뢰: 35개     깃발: " + f_num + "개";
                }else{
                    field[t] = 9;
                    flags[t] = 0;
                    let f_num = 0;
                    for(i=0;i<225;i++){
                        if(toggle[i]===1){ f_num++; }
                    }
                    document.getElementById("flags_num").innerHTML = "지뢰: 35개     깃발: " + f_num + "개";
                }
            }
            else{ //field[t] = "";
                findLand(x,y);
                findNum();
                if(mine[t]===99){
                    drawMine();
                    setTimeout(function(){ alert("Game Over!\n"); },100);
                }
            }

            drawField();
            let mine_string = mine.join("");
            let flags_string = flags.join("");
            if(mine_string === flags_string){ setTimeout(function(){ alert("Game Clear!\n"); },100); init(); }
        }

        function findLand(a,b){
            let x = a;
            let y = b;
            let temp = 15*x + y;
            if( check[temp]!==1 ) {
                if ( x >= 0 && x < 15 ) {
                    if( y >= 0 && y < 15 ){
                        check[temp] = 1;
                        let test = findMine( x , y );
                        if ( test !== true ) {
                            findLand( x , y - 1 );
                            findLand( x + 1 , y );
                            findLand( x , y + 1 );
                            findLand( x - 1 , y );
                        }else{
                            return;
                        }
                    }
                }
            }
        }

        function findNum(){
            let q;
            for(q=0;q<225;q++){
                if(field[q]===0){
                    let find_x = Math.floor(q/15);
                    let find_y = Math.floor(q%15);

                    if(find_x-1>=0 && find_y-1>=0){ 
                        findMine(find_x-1,find_y-1);
                        if(check[q-16]!==1 && mine_num===0){ field[q-16] = 9;}
                    }
                    if(find_x+1<15 && find_y-1>=0){
                        findMine(find_x+1,find_y-1);
                        if(check[q+14]!==1 && mine_num===0){ field[q+14] = 9;}
                    }
                    if(find_x+1<15 && find_y+1<15){
                        findMine(find_x+1,find_y+1);
                        if(check[q+16]!==1 && mine_num===0){ field[q+16] = 9;}
                    }
                    if(find_x-1>=0 && find_y+1<15){
                        findMine(find_x-1,find_y+1);
                        if(check[q-14]!==1 && mine_num===0){ field[q-14] = 9;}  
                    }
                }
            }
        }

        function findMine(a,b){
            mine_num = 0;
            for(i=-1;i<2;i++){
                for(j=-1;j<2;j++){
                    let n = 15*(a+i) + (b+j);
                    if(a+i>=0&&a+i<15){
                        if(b+j>=0&&b+j<15){
                            if(mine[n]===99){ mine_num++; }
                        }
                    }
                }
            }
            
            field[15*a+b] = mine_num;
            if(mine_num!==0){ return true; }
        }

        function drawField(){
            context_main.clearRect(0,0,450,450);

            for(i=0;i<15;i++){
                for(j=0;j<15;j++){
                    let index = 15*i + j;
                    let k = field[index];
                    switch(k){
                        case 0:
                        context_main.fillStyle="rgb(157, 221, 169)";
                        context_main.beginPath();
                        context_main.fillRect(i*blocksize,j*blocksize,blocksize,blocksize);
                        context_main.closePath();
                        break;

                        case 9:     // 클릭하지 않은 상태
                        context_main.beginPath();
                        context_main.strokeRect(i*blocksize,j*blocksize,blocksize,blocksize);
                        context_main.closePath();
                        break;

                        case "※":
                        context_main.beginPath();
                        context_main.strokeRect(i*blocksize,j*blocksize,blocksize,blocksize);
                        context_main.fillStyle="rgb(0, 99, 0)";
                        context_main.fillText("※",i*blocksize+(blocksize/2),j*blocksize+(blocksize/1.5));
                        context_main.closePath();
                        break;

                        case 99:    // 지뢰가 있지만 발견하지 않은 상태
                        context_main.beginPath();
                        context_main.strokeRect(i*blocksize,j*blocksize,blocksize,blocksize);
                        context_main.fillStyle="rgb(0, 99, 0)";
                        context_main.fillText("◇",i*blocksize+(blocksize/2),j*blocksize+(blocksize/1.5));
                        context_main.closePath();
                        break;

                        case 100:   // 지뢰 클릭
                        context_main.beginPath();
                        context_main.strokeRect(i*blocksize,j*blocksize,blocksize,blocksize);
                        context_main.fillStyle="rgb(0, 99, 0)";
                        context_main.fillText("◆",i*blocksize+(blocksize/2),j*blocksize+(blocksize/1.5));
                        context_main.closePath();
                        break;

                        default:
                        context_main.beginPath();
                        //context_main.fillStyle="rgb(173, 216, 181)";
                        //context_main.fillRect(i*blocksize,j*blocksize,blocksize,blocksize);
                        context_main.strokeRect(i*blocksize,j*blocksize,blocksize,blocksize);
                        context_main.fillStyle="rgb(0, 99, 0)";
                        context_main.fillText(k,i*blocksize+(blocksize/2),j*blocksize+(blocksize/1.5));
                        context_main.closePath();
                        break;
                    }
                }
            }
        }

        function drawMine(){
            for(i=0;i<225;i++){
               if(mine[i]===99){ field[i] = 100; }
            }
        }

    </script>
</html>