
<html>
    <body>
        <br>
        <div class="divStyle"><canvas class="canvas" id="canvas" width="600" height="600"></canvas></div>
        <br>
        <div class="divstyle">
            <button class="btn-stripe" onclick="snakeMove();">Play</button>
            <button class="btn-main" onclick="location.href='/'">main</button>
            <button class="btn-stripe" onclick="initScreen();">Reset</canvas>
        </div>
    </body>
    <style>
    .divStyle{
        margin: auto;
        text-align:center;
    }

    .canvas{
        background: rgb(223, 255, 220);
    }

    .btn-stripe{
        width: 10%;
        height: 8%;
        border-radius: 20px;
        border: 2px solid green;
        color: rgb(223, 255, 220);
        font-size: 30px;
        font-weight: 700;
        background-image: repeating-linear-gradient(90deg, 
        black,
        black 10%, 
        green 10%, green 20%);
        background-size: 100%;
        transition:all 0.8s ease-in-out;
    }
    .btn-stripe:hover {
        background-position: 150px;
    }

    .btn-main{
        width: 8%;
        height: 5%;
        text-align: center;
        border-radius: 10px;
        border-color:white;
        background-color:rgb(223, 255, 220);
        font-size: 18px;
        font-weight: 600;
        transition: all 0.4s ease;
        overflow: hidden;
    }
    .btn-main:hover{
        color: #fff;
        background-color: green;
        -webkit-transform: scale(1);
        transform: scale(1);
    }
    </style>
    <script>
        var canvas = document.getElementById("canvas");
        var context = canvas.getContext("2d");
        var stateCode = 3;  // left=1 up=2 right=3 down=4
        var snake_x = new Array();
        var snake_y = new Array();
        var rand_x, rand_y;
        var x = 150;
        var y = 290;
        var i, j;
        var count;
        var front_stateCode;
        context.strokeStyle = "green";

        window.onkeydown = function(){
            if(event.keyCode===37){ front_stateCode = stateCode; stateCode = 1; }    // left
            if(event.keyCode===38){ front_stateCode = stateCode; stateCode = 2; }    // up
            if(event.keyCode===39){ front_stateCode = stateCode; stateCode = 3; }    // right
            if(event.keyCode===40){ front_stateCode = stateCode; stateCode = 4; }    // down
        }

        function GameOver_conn(){
            alert("Game Over!\nScore: " + count);
            if(confirm("점수를 기록하시겠습니까?")){
                var name = prompt("점수를 기록할 닉네임을 입력하세요.","");
                window.location.href= "/saveData_SnakeGame?name=" + name + "&score=" + count;
            }
        }

        function init(){
            snake_x = new Array;
            snake_y = new Array;
            front_stateCode = 3;
            stateCode = 3;
            x = 150;
            y = 290;
            count = 0;
            for(j=0;j<5;j++){
            snake_x[j] = 150 - 20*j;
            snake_y[j] = 290;
            }
        }

        function snakeTail(){
            for(j=snake_x.length-1;j>0;j--){
                snake_x[j] = snake_x[j-1];
                snake_y[j] = snake_y[j-1];
            }
            snake_x[0] = x;
            snake_y[0] = y;
            //alert(snake_x);
        }

        function setApple(){
            rand_x = Math.floor(Math.random()*30)*20 + 10;
            rand_y = Math.floor(Math.random()*30)*20 + 10;
        }

        function drawApple(){
            context.beginPath();
            context.fillStyle="red";
            context.arc(rand_x,rand_y,10,Math.PI*2,false);
            context.fill();
            context.closePath();
        }
        
        function drawSnake(){
            for(i=0;i<snake_x.length;i++){
                context.beginPath();
                context.fillStyle="black";
                context.arc(snake_x[i], snake_y[i], 10, Math.PI*2, false);
                context.fill();
                context.closePath();
            }
        }

        function addTail(){
            let gap_x = snake_x[snake_x.length-1] - snake_x[snake_x.length-2];
            let gap_y = snake_y[snake_y.length-1] - snake_y[snake_y.length-2];

            if(gap_x<0){    // left에
                snake_x.push(snake_x[snake_x.length-1]-20);
                snake_y.push(snake_y[snake_y.length-1]);
            }
            else if(gap_x>0){ // right에
                snake_x.push(snake_x[snake_x.length-1]+20);
                snake_y.push(snake_y[snake_y.length-1]);
            }
            else if(gap_y<0){    // up에
                snake_x.push(snake_x[snake_x.length-1]);
                snake_y.push(snake_y[snake_y.length-1]-20);
            }
            else if(gap_y>0){   // down에
                snake_x.push(snake_x[snake_x.length-1]);
                snake_y.push(snake_y[snake_y.length-1]+20);
            }
            else{}
        }

        function testStun(){
            for(i=1;i<snake_x.length-1;i++){
                if((snake_x[i]===x)&&(snake_y[i]===y)){ return 1; }
            }
            return 0;
        }

        function snakeMove(){
            var stopR = requestAnimationFrame(snakeMove);
            //alert(stopR);

            if(x > canvas.width-10){
                cancelAnimationFrame(stopR);
                GameOver_conn();
            }
            if(x < 10){
                cancelAnimationFrame(stopR);
                GameOver_conn();
            }
            if(y > canvas.height-10){
                cancelAnimationFrame(stopR);
                GameOver_conn();
            }
            if(y < 10){
                cancelAnimationFrame(stopR);
                GameOver_conn();
            }

            context.fillStyle="black";
            
            if(stopR%10===0){
                context.clearRect(0,0,600,600);
                drawCanvas();
            
                if(stateCode===1){  // 방향키 left
                    if(front_stateCode===3){
                        stateCode = 3;
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){ count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        x += 20;
                    }
                    else{
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){  count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        x -= 20;
                    }
                }
                else if(stateCode===2){ // up
                    if(front_stateCode===4){
                        stateCode = 4;
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){  count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        y += 20;
                    }
                    else{
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){  count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        y -= 20;
                    }
                }
                else if(stateCode===3){ // right
                    if(front_stateCode===1){
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){  count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        stateCode = 1;
                        x -= 20;
                    }
                    else{
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){  count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        x += 20;
                    }
                }
                else if(stateCode===4){   // down
                    if(front_stateCode===2){
                        stateCode = 2;
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){  count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        y -= 20;
                    }
                    else{
                        drawSnake();
                        if((x===rand_x)&&(y===rand_y)){  count += 1; setApple(); addTail(); }
                        if(testStun()){
                            cancelAnimationFrame(stopR);
                            GameOver_conn();
                        }
                        y += 20;
                    }
                }
                drawApple();
                snakeTail();
                //if(testStun()){ cancelAnimationFrame(stopR); setTimeout(function(){alert("게임오버!");},100); }
            }
        }

        function drawCanvas(){
            context.fillStyle="rgb(175, 236, 170)";
            for(i=0;i<30;i++){
                for(j=0;j<15;j++){
                    if(i%2===0){
                        context.beginPath();
                        context.fillRect(20*i,40*j,20,20);
                        context.closePath();
                    }
                    else{
                        context.beginPath();
                        context.fillRect(20*i,40*j+20,20,20);
                        context.closePath();
                    }
                }
            }
            context.beginPath();
            context.lineWidth = 3;
            context.strokeRect(0,0,600,600);
            context.closePath();
        }

        function initScreen(){
            context.clearRect(0,0,600,600);
            setApple();
            init();
            drawCanvas();
            drawSnake();
            drawApple();
        }

        initScreen();
    </script>
</html>